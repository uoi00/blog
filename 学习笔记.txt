1.安装
composer安装： composer create-project laravel/laravel --prefer-dist blog  blog为要安装的目录
zip解压： 下载laravel包后解压到所需目录，然后用下面命令配置key：
php artisan key:generate

验证码配置：
http://laravelacademy.org/post/3910.html
composer require mews/captcha

使用Captcha服务提供者之前还需要在config/app.php中注册服务提供者：

'providers' => [
    // ...
    Mews\Captcha\CaptchaServiceProvider::class,
]
同时注册下相应门面：

'aliases' => [
    // ...
    'Captcha' => Mews\Captcha\Facades\Captcha::class,
]

Kindediter 使用 edit.html 获取输入框中的值（html代码）

模型学习
rrotected $fillable =[]; 字段白名单
rrotected $guarded =[]; 禁止laravel重写的字段

portected $hidden=[]; 不显示\屏蔽不需要显示的字段
public $timestamp = false; 关闭laravel修改数据表创建和修改时间的请求

$this->find() 按主键查找
$this->findOrFail()  如果找不到数据则保存
$this->where('vname','uoi00')->get();  按条件查找
$this->where('id','>',1)->get();  id大于1

添加数据 类似与Yii框架 使用save保存。
添加成功返回true

更新类似与Yii框架 先找到要修改的数据 然后修改 使用save保存。
也可以使用$this->fill()

批量修改：
将查找到的大量数据进行一次性的修改（修改的字段是相同的） 自动保存
$rst->update(['type'=>'0']);

collect() 将数组转化为集合（数组）

contains() 查找指定的值

toSql使用
$users = $us::where(['mail'=>$data['mail']])->toSql();

hsa() 是否存在某个键

take(n) 从第一个开始取出n个值
$ff = $this->all();
$fff = $ff->toArray();  //将查询结果转为数组
$fff = $ff->all();  //和视频不一样

##########################################
#   修改 评论                            #
#                                        #
##########################################

######
Jq 获取父节点的方法 $(this).parent

######################
针对某个路由禁用csrt_token验证
在App\Http\Middleware\VerifyCsrfToken文件下 protected $except中添加需要被排除的路由
动态地址匹配
'/photo/show/*'
#####################################
base_path() 获取laravel的安装路径 如：blog
public_path()
app_path

模型更新数据失败
在使用where查询后更新无法更新语句 使用find可以

获取插入数据的ID
$this->fill($data); //插入数据
$this->save(); //保存
echo $this->id; //获取ID

//post get请求判断
if($request->isMethod('post')){
    // 要执行的代码
}
//ajax请求判断
if($r->isajax())
 
设置常量
常量定义方案A：

step1 按路径生成constants文件
app/config/constants.php

step2 constants文件里写
return [
'ADMIN_NAME' => 'administrator',
'ADMIN_NAME1' => ['INIT' => '1']
 


];

step3 在用到的时候
echo Config::get('constants.ADMIN_NAME');
echo Config::get('constants.ADMIN_NAME1.INIT');


常量定义方案B：
是在global里加，因为它是全局启动文件~ 加纯php

1,在app/bootstrap/autoload.php文件里加，require app_path().'/constants.php';

2,在app/constants.php(手动创建文件)里定义纯PHP常量 , define('ADMIN', 'administrator');
